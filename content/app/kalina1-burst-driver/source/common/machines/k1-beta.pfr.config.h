#if (!defined(k1_burst_prf_config_hpp)) && defined(k1_burst_common_h)
#define k1_burst_prf_config_hpp
#else
#error error of using k1-burst-driver.prf.config.hpp
#endif

#define K1_CPU_FREQ_HZ 72000000LL
#define K1_ADC_CURRENT_SENCE_TIME_US 0.3

//#define K1_CURRENT_SENCE_ENABLED 0
//#define K1_ROTOR_ENCO_TYPE K1_ROTOR_ENCO_TYPE_NONE
//#define K1_ROTOR_POSITION_SENCE_TYPE K1_ROTOR_POSITION_SENCE_TYPE_NONE
//#define K1_SERIAL_TYPE K1_SERIAL_TYPE_NONE

#define BURST_ADC_CHANNEL_COUNT 7
//#define adc_INDEX 

#define FMSTR_REC_TIMEBASE (32768+K1_CONTROL_PERIOD_US)
#define FMSTR_REC_BUFF_SIZE 4000

#define motor_INV3PH_NATIVE_RANGE_LO						0
#define motor_INV3PH_NATIVE_RANGE_HI						(K1_PWM_MODULO-K1_ADC_DELAY)

#define motor_RANGE_VOLTAGE_LO									BURST_SIGNAL_MIN
#define motor_RANGE_VOLTAGE_HI									BURST_SIGNAL_MAX
#define motor_LATERAL_VOLTAGE_RANGE_LO					BURST_SIGNAL_MIN
#define motor_LATERAL_VOLTAGE_RANGE_HI					BURST_SIGNAL_MAX

#define adc_INDEX {0,1,4}
#define motor_CURRENT3PH_ADC_INDEX {0,1,2}

#define K1_TM423ADDR 0x98
#define TMP423_ENABLED 1



#define BURST_PROTECTION_ENABLED 1
#define BURST_PANICS_BOARD_TEMPER_ENABLED 1
#if BURST_PANICS_BOARD_TEMPER_ENABLED == 1
#define K1_BOARD_TEMPER_PP_TO_GRAD( pp ) ((burst_signal_t)(pp))
#define K1_BOARD_TEMPER_GRAD_TO_PP( gr ) ((burst_signal_t)(gr))
#define BURST_PANICS_BOARD_TEMPER_OVERHI_PP K1_BOARD_TEMPER_GRAD_TO_PP(100)
#define BURST_PANICS_BOARD_TEMPER_HI_PP K1_BOARD_TEMPER_GRAD_TO_PP(70)
#define BURST_PANICS_BOARD_TEMPER_LO_PP K1_BOARD_TEMPER_GRAD_TO_PP(-15)
#define BURST_PANICS_BOARD_TEMPER_ULTRALO_PP K1_BOARD_TEMPER_GRAD_TO_PP(-20)
#endif



#define BURST_PANICS_BOARD_VOLTAGE_ENABLED 1
#if BURST_PANICS_BOARD_VOLTAGE_ENABLED == 1
//20Â 902 
//30Â 1354 
//40Â 1797 
//50Â 2240 
//MATLAB
/*
pp=[902 1354 1797 2240]'
vv = [20 30 40 50]'*1000
b1 = pinv([pp ones(size(pp))])*vv*1024
b2 = pinv([vv ones(size(vv))])*pp*1024
*/

#define K1_BOARD_VOLTAGE_PP_TO_MVOLT_GAIN_10 22975L
#define K1_BOARD_VOLTAGE_PP_TO_MVOLT_OFFSET_10  ( -304680L )
#define K1_BOARD_VOLTAGE_MVOLT_TO_PP_GAIN_10 46L
#define K1_BOARD_VOLTAGE_MVOLT_TO_PP_OFFSET_10    13619L
#define BURST_PANICS_BOARD_VOLTAGE_OVERHI_PP K1_BOARD_VOLTAGE_MVOLT_TO_PP(50000)
#define BURST_PANICS_BOARD_VOLTAGE_HI_PP K1_BOARD_VOLTAGE_MVOLT_TO_PP(48000)
#define BURST_PANICS_BOARD_VOLTAGE_LO_PP K1_BOARD_VOLTAGE_MVOLT_TO_PP(24000)
#define BURST_PANICS_BOARD_VOLTAGE_ULTRALO_PP K1_BOARD_VOLTAGE_MVOLT_TO_PP(20000)
#endif

#define BURST_PANICS_BOARD_CURRENT_ENABLED 1
#if BURST_PANICS_BOARD_CURRENT_ENABLED == 1
//200 3453 
//500 3460 
//1000 3467 
//1800 3483
//MATLAB
/*
pp=[3453 3460 3467 3483]'
cc = [200 500 1000 1800]'
b1 = pinv([pp ones(size(pp))])*cc*1024
b2 = pinv([cc ones(size(cc))])*pp*1024
*/
#define K1_BOARD_CURRENT_PP_TO_MAMPER_GAIN_10 55624
#define K1_BOARD_CURRENT_PP_TO_MAMPER_OFFSET_10  ( -191880000 )
#define K1_BOARD_CURRENT_MAMPER_TO_PP_GAIN_10 19L
#define K1_BOARD_CURRENT_MAMPER_TO_PP_OFFSET_10   ( 3532500 )
#define BURST_PANICS_BOARD_OVERCURRENT_PP K1_BOARD_CURRENT_MAMPER_TO_PP(50000)
#define BURST_PANICS_BOARD_LOCURRENT_PP (-K1_BOARD_CURRENT_MAMPER_TO_PP(50000))
#endif

